1)Which of the following Python data structures is most similar to the value returned in this line of Python:
x = urllib.request.urlopen('http://data.pr4e.org/romeo.txt')
Ans: file handle
2)In this Python code, which line actually reads the data?
Ans:mysock.recv()
3)Which of the following regular expressions would extract the URL from this line of HTML:
Ans: href="(.+)"
4)In this Python code, which line is most like the open() call to read a file
Ans:mysock.connect()
5)Which HTTP header tells the browser the kind of document that is being returned?
Ans: Content-Type:
6) What should you check before scraping a web site?
Ans: That the web site allows scraping
7) What is the purpose of the BeautifulSoup Python library?
Ans: It repairs and parses HTML to make it easier for a program to understand
8)What ends up in the "x" variable in the following code:
Ans: A list of all the anchor tags (<a..) in the HTML from the URL
9)What is the most common Unicode encoding when moving data between systems?
Ans: UTF-8
10) What is the decimal (Base-10) numeric value for the upper case letter "G" in the ASCII character set?
Ans: 71
11)What word does the following sequence of numbers represent in ASCII:
108, 105, 110, 101
Ans:Line
12. How are strings stored internally in Python 3?
Ans: Unicode
13. When reading data across the network (i.e. from a URL) in Python 3, what method must be used to convert it to the internal format used by strings?
Ans: decode()
********************************************
Assignment_1

import urllib.request, urllib.parse, urllib.error
from bs4 import BeautifulSoup
import ssl

#Get SSL Certification Error handeling
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

#Data Collect From the Website
link = input('Enter - ')
html = urllib.request.urlopen(link, context = ctx).read()
soup = BeautifulSoup(html, 'html.parser')


#Data Scraping
tags = soup('span')
sm = 0
cn = 0
for tag in tags:
    cn += 1
    sm += int(tag.contents[0])

print('Count %d' % cn)
print('Sum %d' % sm)

**************************************************************************
Assignment-2

mport urllib.request, urllib.parse, urllib.error
from bs4 import BeautifulSoup
import ssl

#SSL Certification Error Handle
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

#Data Collection
link = input('Enter URL: ')
cont = int(input('Enter count: '))
line = int(input('Enter position: '))



print('Retrieving: %s' % link)
for i in range(0, cont):
    html = urllib.request.urlopen(link, context=ctx).read()
    soup = BeautifulSoup(html, 'html.parser')
    
    tags = soup('a')
    cn = 0
    ps = 0
    for tag in tags:
        ps += 1
        if ps == line:
            print('Retrieving: %s' % str(tag.get('href', None)))
            link = str(tag.get('href', None))
            ps = 0
            break
